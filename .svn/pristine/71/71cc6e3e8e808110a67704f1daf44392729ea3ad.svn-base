package com.hniois.web.trace;

import com.hniois.controller.base.BaseController;
import com.hniois.trace.entity.Pro_Record;
import com.hniois.trace.service.ProRecordManage;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.List;

//生产记录管理
@RestController
@RequestMapping("/webService/pro_record")
public class ProRecordActionWeb extends BaseController {

    @Resource(name = "proRecordService")
    private ProRecordManage proRecordService;


    /**
     * 查询用过信息
     * @param e
     * @return
     */
    @RequestMapping("/findList")
    public String findlist(Pro_Record e)throws Exception{

        List<Pro_Record> list=null;
        if(StringUtils.isNotEmpty(e.getRec_id())){
            list = proRecordService.findList(e);
        }else{
            list = proRecordService.findList(new Pro_Record());
        }
        JSONArray js = JSONArray.fromObject(list);
        return js.toString();
    }

    /**
     * 查询count
     * @param e 记录信息
     * @return json
     * */
    @RequestMapping(value="/findCount")
    public String findCount(Pro_Record e) throws Exception {
        Integer count = proRecordService.findCount(e);
        return String.valueOf(count);
    }
    /**
     * 查找对象
     * http://localhost:8080/webService/batch/find?batch_id=1
     * @param e
     * @return
     */
    @RequestMapping("/find")
    public String find(Pro_Record e)throws Exception{

        JSONObject json = getMsg();

        if(StringUtils.isNotEmpty(e.getRec_id())){
            Pro_Record record=proRecordService.find(e);
            JSONObject js = JSONObject.fromObject(record);
            return js.toString();
        }else{
            setMsg(json,"error","无此对象");
            return json.toString();
        }
    }


    /**
     * 保存新增
     * @param e
     * @return
     */
    @RequestMapping("/add")
    public String add(Pro_Record e)throws  Exception{
        JSONObject obj=getMsg();
        //先判断生产记录号是否为null,如果不为空,则可以保存
        if(StringUtils.isNotEmpty(e.getRec_num())){
            if(e.getPro_name().indexOf(",")>0){
                String[] names=e.getPro_name().split(",");
                String[] ids=e.getPro_id().split(",");
                String[] codes=e.getPro_code().split(",");
                for(int i=0;i<codes.length;i++){
                    Pro_Record pr=new Pro_Record();
                    pr.setPro_id(ids[i]);
                    pr.setPro_name(names[i]);
                    pr.setPro_code(codes[i]);
                    pr.setAddress(e.getAddress());
                    pr.setPatch_num(e.getPatch_num());
                    pr.setRec_num(e.getRec_num());
                    pr.setEnd_time(e.getEnd_time());
                    pr.setSt_time(e.getSt_time());
                    proRecordService.save(pr);
                }
            }else{
                proRecordService.save(e);
            }

        }else{
            setMsg(obj,"error","没有生产记录号");
        }
        return obj.toString();
    }

    /**
     * 编辑保存
     * @param e
     * @return
     */
    @RequestMapping("/update")
    public String update(Pro_Record e)throws Exception{
        JSONObject obj=getMsg();
        if(proRecordService.findCount(e)>0){
            proRecordService.update(e);
        }else{
            setMsg(obj,"error","编辑失败");
        }
        return obj.toString();
    }


    /**
     * 单个删除
     * @param e
     * @return
     */
    @RequestMapping("/delete")
    public String delete(Pro_Record e)throws Exception{
        JSONObject obj=getMsg();
        if(e.getRec_id()!=null) {
            proRecordService.delete(e);
        }else {
            setMsg(obj, "error", "删除失败");
        }
        return obj.toString();
    }

    /**
     * 批量删除
     * @param e
     * @return
     */
    @RequestMapping("/deletes")
    public String deletes(Pro_Record e)throws Exception{
        JSONObject obj=getMsg();
        if(e.getData().size()>0){
            proRecordService.deleteBatch(e);
        }else{
            setMsg(obj,"error","删除失败");
        }
        return obj.toString();
    }


}
