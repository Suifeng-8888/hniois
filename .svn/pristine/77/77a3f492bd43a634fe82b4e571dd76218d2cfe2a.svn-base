package com.hniois.monitor.controller;

import com.alibaba.fastjson.JSON;
import com.hniois.common.page.Page;
import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Article;
import com.hniois.monitor.service.ArticleService;
import com.hniois.util.Const;
import com.hniois.util.DateUtil;
import com.hniois.util.SessionManager;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;

/**
 * Create By javaMan
 * 2018/9/13  15:30
 * 新闻公告咨询  文章 controller
 *
 */
@Controller
@RequestMapping(value = "/article")
public class ArticleController extends BaseController {
    @Resource(name = "articleService")
    private ArticleService articleService;

    private String list = "monitor/article/article_list";// 分页列表页
    private String edit = "monitor/article/article_edit";// 新增修改页

    @RequestMapping(value = "/toPage")
    public ModelAndView toPage(Page page) {
        ModelAndView mv = getModelAndViewToPage(page);
        mv.setViewName(list);
        return mv;
    }

    @RequestMapping(value = "/list")
    @ResponseBody
    public String pageList(Article article) throws Exception {
        // 当前页
        int currPage = getThisPage(article.getPage());
        // 每页显示条数
        int limit = getThisLimit(article.getLimit());
        article.setOffset((currPage-1) * limit);
        article.setPageSize(limit);
        Page page = articleService.findPage(article);
        return JSON.toJSONString(page);
    }

    @RequestMapping(value="/toEdit")
    public ModelAndView addORUpd(Article e) throws Exception {
        ModelAndView mv = getModelAndView();
        Article article = new Article();
        if(Const.OUTFIT_ADMIN.equals(SessionManager.getUserType())){
            article.setOrg_id(SessionManager.getFarmID());
            article.setOrg_name(SessionManager.getFarmName());
        }
        if (StringUtils.isNotEmpty(e.getId())) {
            article = articleService.find(e);
        }
        article.setCode(e.getCode());  // 判断：0查看 or 1 增加/修改
        mv.addObject("article", article);
        mv.setViewName(edit);
        return mv;
    }

    @RequestMapping(value = "/add")
    @ResponseBody
    public String add(Article article) throws Exception {
        JSONObject obj = getMsg();//返回信息
        article.setTime(DateUtil.getDay());
        articleService.save(article);
        return obj.toString();
    }

    @RequestMapping(value = "/update")
    @ResponseBody
    public String update(Article article) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(StringUtils.isNotEmpty(article.getId())) {
            articleService.update(article);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

    @RequestMapping(value = "/delete")
    @ResponseBody
    public String delete(Article article) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(StringUtils.isNotEmpty(article.getId())) {
            articleService.delete(article);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

    @RequestMapping(value = "/deletes")
    @ResponseBody
    public String deletes(Article article) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(article.getData() != null && article.getData().size() > 0) {
            articleService.deleteBatch(article);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

}
