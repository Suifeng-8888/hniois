package com.hniois.web.monitor;

import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Poison;
import com.hniois.monitor.service.PoisonManage;
import com.hniois.util.UuidUtil;
import com.hniois.web.Message;
import org.apache.commons.lang.StringUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.List;

/**
 * 打药 管理 接口
 */
@RestController
@RequestMapping("/webService/poison")
public class PoisonActionWeb extends BaseController {

    @Resource(name="poisonService")
    private PoisonManage poisonService;

    /**
     * 打药 新增
     * @param poison
     * @return
     */
    @RequestMapping(value = "/add", method = RequestMethod.POST)
    public Message add(Poison poison) {
        Message message = new Message();
        if(StringUtils.isNotEmpty(poison.getFarm_id())) {
            String uuid = UuidUtil.get32UUID();
            poison.setPid(uuid);
            try {
                poisonService.save(poison);
                message.setCode(0);
                message.setMsg("新增成功!");
            } catch (Exception e) {
                message.setCode(1);
                message.setMsg("系统异常,新增失败!");
                message.setData(e.getMessage());
            }
        } else {
            message.setCode(1);
            message.setMsg("参数不能为为空!");
        }
        return message;
    }

    /**
     * 打药 删除
     * @param id
     * @return
     */
    @RequestMapping(value = "/del/{id}", method = RequestMethod.GET)
    public Message delete(@PathVariable(value = "id") String id) {
        Message message = new Message();
        if(StringUtils.isNotEmpty(id)) {
            Poison poison = new Poison();
            poison.setId(id);
            try {
                poisonService.delete(poison);
                message.setCode(0);
                message.setMsg("删除成功!");
            } catch (Exception e) {
                message.setCode(1);
                message.setMsg("系统异常,删除失败!");
                message.setData(e.getMessage());
            }
        } else {
            message.setCode(0);
            message.setMsg("参数不能为空!");
        }
        return message;
    }

    /**
     * 打药 更新
     * @param poison
     * @return
     */
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public Message update(Poison poison) {
        Message message = new Message();
        if(StringUtils.isNotEmpty(poison.getPid())) {
            try {
                poisonService.update(poison);
                message.setCode(0);
                message.setMsg("修改成功!");
            } catch (Exception e) {
                message.setCode(1);
                message.setMsg("系统异常,修改失败!");
                message.setData(e.getMessage());
            }
        } else {
            message.setCode(1);
            message.setMsg("参数不能为空!");
        }
        return message;
    }

    /**
     * 打药 详情
     * @param id
     * @return
     */
    @RequestMapping(value = "/find/{id}", method = RequestMethod.GET)
    public Message find(@PathVariable("id") String id) {
        Message message = new Message();
        if(StringUtils.isNotEmpty(id)) {
            Poison poison = new Poison();
            poison.setPid(id);
            try {
                Poison ps = poisonService.find(poison);
                message.setCode(0);
                message.setMsg("查询成功!");
                message.setData(ps);
            } catch (Exception e) {
                message.setCode(1);
                message.setMsg("系统异常,查询失败!");
                message.setData(e.getMessage());
            }
        } else {
            message.setCode(1);
            message.setMsg("参数不能为空!");
        }
        return message;
    }

    /**
     * 打药 列表
     * @param poison
     * @return
     */
    @RequestMapping(value = "/findList", method = RequestMethod.GET)
    public Message findList(Poison poison) {
        Message message = new Message();
        if(StringUtils.isNotEmpty(poison.getFarm_id())) {
            try {
                List<Poison> buyList = poisonService.findList(poison);
                message.setCode(0);
                message.setMsg("列表查询成功!");
                message.setData(buyList);
            } catch (Exception e) {
                message.setCode(1);
                message.setMsg("系统异常,查询失败!");
                message.setData(e.getMessage());
            }
        } else {
            message.setCode(1);
            message.setMsg("参数不能为空！");
        }
        return message;
    }
}
