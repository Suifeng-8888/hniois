package com.hniois.monitor.controller;

import com.alibaba.fastjson.JSON;
import com.hniois.common.page.Page;
import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Vaccine;
import com.hniois.monitor.service.VaccineManage;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;

@Controller
@RequestMapping("/vaccine")
public class VaccineAction extends BaseController {

    @Resource(name="vaccineService")
    private VaccineManage vaccineService;

    String vaccine_edit="monitor/breed_detail/vaccine_edit";

    /**
     * 分页查询
     * @param e
     * @return
     */
    @ResponseBody
    @RequestMapping("/list")
    public String showPage(Vaccine e)throws Exception{
        //获取当前页
        int current=getThisPage(e.getPage());
        //获取每页显示条数
        int limit=getThisLimit(e.getLimit());
        e.setOffset((current-1)*limit);
        e.setPagerSize(limit);//每页显示记录数
        Page page = vaccineService.findPage(e);
        return JSON.toJSONString(page);
    }

    /**
     * 新增 or 编辑
     * @param e
     * @return
     */
    @RequestMapping("/toEdit")
    @ResponseBody
    public ModelAndView edit(Vaccine e)throws Exception{
        ModelAndView mv=this.getModelAndView();
        Vaccine vac=new Vaccine();
        vac.setBreed_id(e.getBreed_id());
        if(StringUtils.isNotEmpty(e.getVa_id())){
            vac=vaccineService.find(e);
        }
        vac.setCode(e.getCode());
        mv.addObject("vaccine",vac);
        mv.setViewName(vaccine_edit);
        return mv;
    }

    /**
     * 保存新增
     * @param e
     * @return
     */
    @RequestMapping("/add")
    @ResponseBody
    public String add(Vaccine e)throws  Exception{
        JSONObject obj=getMsg();
        if(StringUtils.isNotEmpty(e.getVa_id())){
            //如果id不为空,则判断对象是否已存在
            Vaccine vacine=new Vaccine();
            vacine.setVa_id(e.getVa_id());
            if(vaccineService.findCount(vacine)>0){
                setMsg(obj,"error","当前对象已存在");
            }else{
                vaccineService.save(e);
            }
        }else{
            vaccineService.save(e);
        }
        return obj.toString();
    }

    /**
     * 编辑保存
     * @param e
     * @return
     */
    @RequestMapping("/update")
    @ResponseBody
    public String update(Vaccine e) throws Exception{
        JSONObject obj=getMsg();
        if(StringUtils.isNotEmpty(e.getVa_id())){
            vaccineService.update(e);
        }else{
            setMsg(obj,"error","ID不能问空");
        }
        return obj.toString();
    }


    /**
     * 单个删除
     * @param e
     * @return
     */
    @RequestMapping("/delete")
    @ResponseBody
    public String delete(Vaccine e)throws Exception{
        JSONObject obj=getMsg();
        if(StringUtils.isNotEmpty(e.getVa_id())) {
            vaccineService.delete(e);
        }else {
            setMsg(obj, "error", "删除失败");
        }
        return obj.toString();
    }
}
