package com.hniois.monitor.controller;

import com.alibaba.fastjson.JSON;
import com.hniois.common.page.Page;
import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Handle;
import com.hniois.monitor.service.HandleManage;
import com.hniois.util.DateUtil;
import com.hniois.util.ExportExcelUtil;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import java.util.List;

@Controller
@RequestMapping("/handle")
public class HandleAction extends BaseController {

    @Resource(name = "handleService")
    private HandleManage handleService;

    String handle_list="monitor/handle/handle_list";
    String handle_edit="monitor/handle/handle_edit";
    String seed_table="monitor/handle/seed_table";

    @RequestMapping("/toPage")
    @ResponseBody
    public ModelAndView toPage(Page e){
        ModelAndView mv=this.getModelAndViewToPage(e);
        mv.setViewName(handle_list);
        return mv;
    }

    /**
     * 分页查询
     * @param e
     * @return
     */
    @ResponseBody
    @RequestMapping("/list")
    public String showPage(Handle e)throws Exception{
        //获取当前页
        int current=getThisPage(e.getPage());
        //获取每页显示条数
        int limit=getThisLimit(e.getLimit());
        e.setOffset((current-1)*limit);
        e.setPagerSize(limit);//每页显示记录数
        Page page = handleService.findPage(e);
        return JSON.toJSONString(page);
    }

    /**
     * 新增 or 编辑
     * @param e
     * @return
     */
    @RequestMapping("/toEdit")
    @ResponseBody
    public ModelAndView edit(Handle e)throws Exception{
        ModelAndView mv=this.getModelAndView();
        Handle handle=new Handle();
        if(StringUtils.isNotEmpty(e.getId())){
            handle=handleService.find(e);
        }
        handle.setCode(e.getCode());
        mv.addObject("handle",handle);
        mv.setViewName(handle_edit);
        return mv;
    }

    /**
     * 保存新增
     * @param e
     * @return
     */
    @RequestMapping("/add")
    @ResponseBody
    public String add(Handle e)throws  Exception{
        JSONObject obj=getMsg();
        //先判断数据库是否已经存在当前对象
        if(handleService.findCount(e)>0){
            setMsg(obj,"error","当前对象已存在");
        }else{
            handleService.save(e);
            //当完成收货是需要将相应农场的土地编号状态进行更改
        }
        return obj.toString();
    }

    /**
     * 编辑保存
     * @param e
     * @return
     */
    @RequestMapping("/update")
    @ResponseBody
    public String update(Handle e){
        JSONObject obj=getMsg();
        try{
            handleService.update(e);
        }catch(Exception ex){
            setMsg(obj,"error","编辑失败");
        }
        return obj.toString();
    }


    /**
     * 单个删除
     * @param e
     * @return
     */
    @RequestMapping("/delete")
    @ResponseBody
    public String delete(Handle e)throws Exception{
        JSONObject obj=getMsg();
        if(e.getId()!=null) {
            handleService.delete(e);
        }else {
            setMsg(obj, "error", "删除失败");
        }
        return obj.toString();
    }

    /**
     * 批量删除
     * @param e
     * @return
     */
    @RequestMapping("/deletes")
    @ResponseBody
    public String deletes(Handle e)throws Exception{
        JSONObject obj=getMsg();
        if(e.getData().size()>0){
            handleService.deleteBatch(e);
        }else{
            setMsg(obj,"error","删除失败");
        }
        return obj.toString();
    }

    /**
     * 选择播种的表进行采摘
     * @param e
     * @return
     */
    @RequestMapping("/choose")
    public ModelAndView chose1(Handle e){
        ModelAndView mv=this.getModelAndView();
        mv.setViewName(seed_table);
        return mv;
    }



    /**
     * 导出
     * @param e 信息
     * @return json
     * */
    @RequestMapping(value="/doExport")
    @ResponseBody
    public void doExport(Handle e) throws Exception {
        //导出工具
        ExportExcelUtil<Handle> export = new ExportExcelUtil<Handle>();
        //文件名称
        String filename = "handleList" + DateUtil.getTimes();
        //导出数据信息
        List list = handleService.findPage(e).getData();
        //执行导出
        doExport(filename,list,export);
    }
}
