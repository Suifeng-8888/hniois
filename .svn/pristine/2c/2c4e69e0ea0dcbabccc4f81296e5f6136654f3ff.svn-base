package com.hniois.web.monitor;


import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Chemical;
import com.hniois.monitor.service.ChemicalManage;
import com.hniois.util.UuidUtil;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import java.util.List;

@Controller
@RequestMapping(value="/webService/chemical")
public class ChemicalActionWeb extends BaseController {
    //Chemical
    @Resource(name = "chemicalService")
    private ChemicalManage chemicalService;


    /**
     * 查询List
     *
     * @param e 参数
     * @return json字符串
     */
    @RequestMapping(value = "/findList")
    @ResponseBody
    public String findList(Chemical e) throws Exception {
        List<Chemical> list = chemicalService.findList(e);
        JSONArray arr = JSONArray.fromObject(list);
        return arr.toString();
    }


    /**
     * 查询
     *
     * @param e 参数
     * @return json字符串
     */
    @RequestMapping(value = "/find")
    @ResponseBody
    public String find(Chemical e) throws Exception {
        Chemical m=new Chemical();
        if(StringUtils.isNotEmpty(e.getId())){
             m= chemicalService.find(e);
        }
        JSONObject obj = JSONObject.fromObject(m);
        return obj.toString();
    }


    /**
     * 保存
     *
     * @param e 参数
     * @return json字符串
     */
    @RequestMapping(value = "/add")
    @ResponseBody
    public String add(Chemical e) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(!StringUtils.isNotEmpty(e.getId())){
            String uid= UuidUtil.get32UUID();
            e.setId(uid);
            chemicalService.save(e);
        } else {
            setMsg(obj, "error", "不能手动输入ID");
        }
        return obj.toString();
    }

    /**
     * 修改
     *
     * @param e 参数
     * @return json字符串
     */
    @RequestMapping(value = "/update")
    @ResponseBody
    public String update(Chemical e) throws Exception {
        JSONObject obj = getMsg();
        if(StringUtils.isNotEmpty(e.getId())){
            Chemical p = new Chemical();
            p.setId(e.getId());
            //条件判断
            if (chemicalService.findCount(p) > 0) {
                chemicalService.update(e);
            } else {
                setMsg(obj, "error", "对象不存在!");
            }
        }else{
            setMsg(obj, "error", "ID不能为空!");
        }

        return obj.toString();
    }

    /**
     * 删除
     *
     * @param e 参数
     * @return json字符串
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public String delete(Chemical e) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if (!StringUtils.isNotEmpty(e.getId())) {
            setMsg(obj, "error", "ID不能为空!");
        } else {
            chemicalService.delete(e);
        }
        return obj.toString();
    }
}