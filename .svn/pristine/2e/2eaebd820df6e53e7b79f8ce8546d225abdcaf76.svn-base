package com.hniois.trace.controller;

import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.*;
import com.hniois.monitor.service.HarvestManage;
import com.hniois.monitor.service.RecallService;
import com.hniois.monitor.service.ReportDetailManage;
import com.hniois.monitor.service.ReportManage;
import com.hniois.monitor.service.impl.ProvidersService;
import com.hniois.trace.entity.Order;
import com.hniois.trace.entity.QRcode;
import com.hniois.trace.service.OrderManage;
import com.hniois.trace.service.QRcodeManage;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 综合查询  追溯信息查询
 * Create By javaMan
 * 2018/10/10  16:33
 */
@Controller
@RequestMapping(value = "/search")
public class SearchController extends BaseController {

    @Resource(name = "providersService")
    private ProvidersService providersService; // 经营主体(生产企业)

    @Resource(name="qRcodeService")
    private QRcodeManage codeService; // 追随二维码

    private String search_index = "trace/search/index1";

    @Resource(name="harvestService")
    private HarvestManage harvestService; // 采摘

    @Resource(name="orderService")
    private OrderManage orderService; // 订单

    @Resource(name="reportService")
    private ReportManage reportService; // 检测报告

    @Resource(name="reportDetailService")
    private ReportDetailManage detailService; // 检测报告详情

    @Resource(name="recallService")
    private RecallService recallService;//  召回

    /**
     * 进入追溯信息查询页
     * @return
     */
    @RequestMapping(value = "/index")
    public ModelAndView index() {
        ModelAndView mv = getModelAndView();
        mv.setViewName(search_index);
        return mv;
    }

    /**
     * @param code  产品编码
     * @param batch 产品批次
     * @return
     */
    @RequestMapping("/getdata")
    @ResponseBody
    public Map<String,Object> getData(String code, String batch) throws Exception {
        Map<String, Object> map = new HashMap<String, Object>();  // 返回数据
        Harvest harvest = new Harvest();
        Providers providers = new Providers();
        List<Order> orders = new ArrayList<Order>();
        QRcode qRcode = new QRcode();
        Report report = new Report();
        List<ReportDetail> reportDetails = new ArrayList<ReportDetail>();
        Recall recall = new Recall();

        if(StringUtils.isNotEmpty(batch)) {
            harvest.setBatch(batch);
            harvest = harvestService.find(harvest);  // 采摘信息

            if(harvest != null){
                providers.setP_id(harvest.getFarm_id());
                providers = providersService.find(providers); // (经营主体)生产基地

            }

            Order order = new Order();
            order.setBatch(batch);
            orders = orderService.findList(order); // 订单

            qRcode.setBatch(batch);
            qRcode = codeService.find(qRcode); //  追溯码

            report.setProduct_batch(batch);
            report = reportService.find(report);// 检测报告

            if (report != null) {
                ReportDetail reportDetail = new ReportDetail();
                reportDetail.setReport_id(report.getReport_id());
                reportDetails = detailService.findList(reportDetail);// 检测报告详情
            }

            if (StringUtils.isNotEmpty(code)){
                recall.setBatch(batch);
                recall.setBar_code(code);
                recall = recallService.find(recall);  // 产品召回
            }
        }

        map.put("providers", providers); // 企业
        map.put("harvest", harvest); //  采摘
        map.put("orders", orders);//  订单
        map.put("qRcode", qRcode); // 追溯码
        map.put("report", report); // 检测报告
        map.put("reportDetails", reportDetails); // 检测报告详情
        map.put("recall", recall); // 召回

        return map;
    }
}
