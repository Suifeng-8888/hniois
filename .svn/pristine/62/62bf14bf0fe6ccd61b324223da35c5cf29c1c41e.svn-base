package com.hniois.web.monitor;

import com.alibaba.fastjson.JSON;
import com.hniois.common.page.Page;
import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Report;
import com.hniois.monitor.service.ReportManage;
import com.hniois.util.UuidUtil;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.List;

@RestController
@RequestMapping("/webService/report")
public class ReportActionWeb extends BaseController {

    @Resource(name="reportService")
    private ReportManage reportService;


    /**
     * 分页查询报告信息
     * @param e
     * @return
     * @throws Exception
     */
    @RequestMapping("/list")
    public String list(Report e) throws Exception{
        //当前页
        int currpage=getThisPage(e.getPage());
        //每页显示条数
        int limit=getThisLimit(e.getLimit());
        e.setOffset((currpage-1)*limit);
        e.setPageSize(limit);
        Page page = reportService.findPage(e);
        return JSON.toJSONString(page);
    }

    /**
     * 查询报告信息
     * @param e
     * @return
     * @throws Exception
     */
    @RequestMapping("/find")
    public String find(Report e)throws Exception{
        JSONObject obj = getMsg();
        if(StringUtils.isNotEmpty(e.getRid())){
            Report report= reportService.find(e);
            JSONObject js = JSONObject.fromObject(report);
            return js.toString();
        }else{
            setMsg(obj,"error","ID不能为空");
            return obj.toString();
        }

    }

    /**
     * 查询所有报告
     * @param e
     * @return
     * @throws Exception
     */
    @RequestMapping("/findList")
    public String getAll(Report e) throws Exception{

        List<Report> list = reportService.findList(e);
        JSONArray js = JSONArray.fromObject(list);
        return js.toString();
    }

    /**
     * 查询总数
     * @param e
     * @return
     * @throws Exception
     */
    @RequestMapping("/findCount")
    public String getCount(Report e)throws Exception{
        int count = reportService.findCount(e);
        return String.valueOf(count);
    }

    /**
     * 新增报告
     * @param e
     * @return
     * @throws Exception
     */
    @RequestMapping("/add")
    public String add(Report e) throws Exception{
        JSONObject obj = getMsg();
        if(!StringUtils.isNotEmpty(e.getRid())){
            String uid= UuidUtil.get32UUID();
            e.setRid(uid);
            reportService.save(e);
        }else{
            setMsg(obj,"error","新增失败");
        }
        return obj.toString();
    }

    @RequestMapping("/delete")
    public String delete(Report e)throws Exception{
        JSONObject obj=getMsg();
        if(StringUtils.isNotEmpty(e.getRid())){
            reportService.delete(e);
        }else{
            setMsg(obj,"error","ID不能为空");
        }
        return obj.toString();
    }
    /**
     * 更改报告
     * @param e
     * @return
     * @throws Exception
     */
    @RequestMapping("/update")
    public String update(Report e)throws Exception{
        JSONObject obj = getMsg();
        if(StringUtils.isNotEmpty(e.getRid())){
            reportService.update(e);
        }else{
            setMsg(obj,"error","ID不能为空");
        }
        return obj.toString();
    }
}
