package com.hniois.web.trace;

import com.hniois.trace.entity.Retailer;
import com.hniois.trace.service.RetailerService;
import com.hniois.web.Message;
import org.apache.commons.lang.StringUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.List;

/**
 * Create By javaMan
 * 2018/9/25  17:28
 * 销售商管理接口
 */
@RequestMapping(value = "/webService/retailer")
@RestController
public class RetailerWebService {

    @Resource(name = "retailerService")
    private RetailerService retailerService;

    /**
     * 销售商详情
     * @param id
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/find/{id}", method = RequestMethod.GET)
    public Retailer getRetailer(@PathVariable("id") Integer id) throws Exception {
        Retailer retailer = new Retailer();
        retailer.setId(id.toString());
        return retailerService.find(retailer);
    }

    /**
     * 销售商列表
     * @param retailer
     * @return
     */
    @RequestMapping(value = "/findList", method = RequestMethod.GET)
    public List<Retailer> getRetailerList(Retailer retailer) throws Exception {
        return retailerService.findList(retailer);
    }

    /**
     * 供应商新增
     * @param retailer
     * @return
     */
    @RequestMapping(value = "/save", method = RequestMethod.POST)
    public Message saveProvide(Retailer retailer) {
        Message message = new Message(0, "添加成功!");
        try {
            retailerService.save(retailer);
        } catch (Exception e) {
            message.setCode(1);
            message.setMsg("添加失败!");
            e.printStackTrace();
        }
        return message;
    }

    /**
     * 销售商信息删除
     * @param id
     * @return
     */
//    @RequestMapping(value = "/del/{id}", method = RequestMethod.DELETE)
    @RequestMapping(value = "/del/{id}", method = RequestMethod.GET)
    public Message delRetailer(@PathVariable("id") Integer id) {
        Message message = new Message();
        if(id != null) {
            Retailer retailer = new Retailer();
            retailer.setId(id.toString());
            try {
                retailerService.delete(retailer);
                message.setCode(0);
                message.setMsg("删除成功!");
            } catch (Exception e) {
                message.setCode(1);
                message.setMsg("删除失败!");
                e.printStackTrace();
            }
        }
        return message;
    }

    /**
     * 更新销售商信息
     * @param retailer
     * @return
     */
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public Message updateProvide(Retailer retailer) {
        Message message = new Message();
        if(StringUtils.isNotEmpty(retailer.getId())) {
            try {
                retailerService.update(retailer);
                message.setCode(0);
                message.setMsg("更新成功!");
            } catch (Exception e) {
                message.setCode(1);
                message.setMsg("更新失败!");
                e.printStackTrace();
            }
        }
        return message;
    }

}
