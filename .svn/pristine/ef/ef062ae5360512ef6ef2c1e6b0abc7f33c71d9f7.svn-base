package com.hniois.monitor.controller;

import com.alibaba.fastjson.JSON;
import com.hniois.common.page.Page;
import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Buy;
import com.hniois.monitor.entity.Chemical;
import com.hniois.monitor.service.ChemicalManage;
import com.hniois.util.DateUtil;
import com.hniois.util.ExportExcelUtil;
import com.hniois.util.SessionManager;
import com.hniois.util.UuidUtil;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import javax.annotation.Resource;
import java.util.List;

@Controller
@RequestMapping(value="/chemical")
public class ChemicalAction extends BaseController{
    //Chemical
    @Resource(name="chemicalService")
    private ChemicalManage chemicalService;

    private String chemical_list = "monitor/chemical/chemical_list";
    private String chemical_edit = "monitor/chemical/chemical_edit";
    private String crop_table = "monitor/chemical/crop_table";
    private String buy_table = "monitor/chemical/buy_table";
    private String chemical_img = "monitor/chemical/chemical_img";

    @RequestMapping(value="/toPage")
    public ModelAndView toPage(Page e){
        ModelAndView mv = getModelAndViewToPage(e);
        mv.setViewName(chemical_list);
        return mv;
    }

    /**
     * 选择农作物
     * @param e
     * @return
     */
    @RequestMapping(value="/crop")
    public ModelAndView toSeed(Chemical e){

        ModelAndView mv = getModelAndViewToPage(e);
        mv.setViewName(crop_table);
        return mv;
    }

    /**
     * 选择化肥
     * @param e
     * @return
     */
    @RequestMapping(value="/buy")
    public ModelAndView toBuy(Buy e){
        ModelAndView mv = getModelAndViewToPage(e);
        mv.setViewName(buy_table);
        return mv;
    }
    /**
     * 分页查询
     * @param e          参数
     * @return           json字符串
     * */
    @RequestMapping(value = "/list")
    @ResponseBody
    public String list(Chemical e) throws Exception{
        if(StringUtils.isNotEmpty(SessionManager.getFarmID())){
            e.setFarm_id(SessionManager.getFarmID());
        }
        // 当前页
        int currPage = getThisPage(e.getPage());
        // 每页显示条数
        int limit = getThisLimit(e.getLimit());

        e.setOffset((currPage-1)*limit);
        e.setPageSize(limit);
        Page page = chemicalService.findPage(e);
        return JSON.toJSONString(page);
    }


    /**
     * 跳转
     * @param e          参数
     * @return           新增 or 保存页面
     */
    @RequestMapping(value="/toEdit")
    public ModelAndView toAorU(Chemical e) throws Exception{
        ModelAndView mv = this.getModelAndView();
        Chemical chemical = new Chemical();
        if(StringUtils.isNotEmpty(e.getId())){
            chemical = chemicalService.find(e);
        }
        chemical.setCode(e.getCode());//判断：0查询 or 1 增加/修改
        mv.addObject("chemical",chemical);
        mv.setViewName(chemical_edit);
        return mv;
    }

    /**
     * 保存
     * @param e          参数
     * @return           json字符串
     * */
    @RequestMapping(value="/add")
    @ResponseBody
    public String add(Chemical e) throws Exception {
        JSONObject obj = getMsg();
        if(StringUtils.isNotEmpty(SessionManager.getFarmID())){
            e.setFarm_id(SessionManager.getFarmID());
        }
        if(!StringUtils.isNotEmpty(e.getId())){
            String uid= UuidUtil.get32UUID();
            e.setId(uid);
            if(StringUtils.isNotEmpty(e.getBuy_id())&&StringUtils.isNotEmpty(e.getCrop_id())){
                chemicalService.save(e);
            }else{
                setMsg(obj,"error","请从数据列表选择数据");
            }

        }else{
            setMsg(obj,"error","新增失败");
        }

        return obj.toString();
    }

    /**
     * 修改
     * @param e          参数
     * @return           json字符串
     * */
    @RequestMapping(value="/update")
    @ResponseBody
    public String update(Chemical e) throws Exception {
        JSONObject obj = getMsg();
        if(StringUtils.isNotEmpty(e.getId())){
            Chemical p = new Chemical();
            p.setId(e.getId());
            if(chemicalService.findCount(p)>0){
                chemicalService.update(e);
            }else{
                setMsg(obj,"error","对象不存在");
            }
        }else{
            setMsg(obj,"error","ID不能为空");
        }
        return obj.toString();
    }

    /**
     * 删除
     * @param e          参数
     * @return           json字符串
     * */
    @RequestMapping(value="/delete")
    @ResponseBody
    public String delete(Chemical e) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(StringUtils.isNotEmpty(e.getId())){
            chemicalService.delete(e);
        }else{
            setMsg(obj,"error","ID不能为空");
        }
        return obj.toString();
    }

    /**
     * 删除
     * @param e          参数
     * @return           json字符串
     * */
    @RequestMapping(value="/deletes")
    @ResponseBody
    public String deletes(Chemical e) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(e.getData().size()>0){
            chemicalService.deleteBatch(e);
        }else{
            setMsg(obj,"error","操作失败!");
        }
        return obj.toString();
    }

    /**
     * 导出
     * @param e 信息
     * @return json
     * */
    @RequestMapping(value="/doExport")
    @ResponseBody
    public void doExport(Chemical e) throws Exception {
        if(StringUtils.isNotEmpty(SessionManager.getFarmID())){
            e.setFarm_id(SessionManager.getFarmID());
        }
        //导出工具
        ExportExcelUtil<Chemical> export = new ExportExcelUtil<Chemical>();
        //文件名称
        String filename = "chemicalList" + DateUtil.getTimes();
        //导出数据信息
        List list = chemicalService.findPage(e).getData();
        //执行导出
        doExport(filename,list,export);
    }

    /**
     * 施肥图片
     * @param e 学校信息
     */
    @RequestMapping(value="/toEditImgs")
    public ModelAndView toEditImgs(Chemical e) throws Exception{
        ModelAndView mv = this.getModelAndView();
        Chemical chemical = new Chemical();
        if(StringUtils.isNotEmpty(e.getId())){
            chemical = chemicalService.find(e);
        }
        mv.addObject("chemical",chemical);
        mv.setViewName(chemical_img);
        return mv;
    }

}