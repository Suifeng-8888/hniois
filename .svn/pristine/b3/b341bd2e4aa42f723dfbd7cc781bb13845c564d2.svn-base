package com.hniois.web.trace;

import com.hniois.controller.base.BaseController;
import com.hniois.trace.entity.Productor;
import com.hniois.trace.service.ProductorManage;
import net.sf.json.JSONObject;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.List;

@RestController
@RequestMapping("/webService/zsProduct")
public class ProductorActionWeb extends BaseController {

    @Resource(name = "productorService")
    private ProductorManage productorService;

    /**
     * 查询用过信息
     * @param e
     * @return
     */
    @RequestMapping("/findlist")
    public String findlist(Productor e)throws Exception{

        List<Productor> list = productorService.findList(e);
        JSONObject js = JSONObject.fromObject(list);
        return js.toString();
    }

    /**
     * 查找对象
     * http://localhost:8080/webService/batch/find?batch_id=1
     * @param e
     * @return
     */
    @RequestMapping("/find")
    public String find(Productor e)throws Exception{

        Productor productor=productorService.find(e);
        JSONObject js = JSONObject.fromObject(productor);
        return js.toString();
    }


    /**
     * 保存新增
     * @param e
     * @return
     */
    @RequestMapping("/add")
    public String add(Productor e)throws  Exception{
        JSONObject obj=getMsg();
        //先判断数据库是否已经存在当前对象
        Productor p=new Productor();
        p.setPro_id(e.getPro_id());
        if(productorService.findCount(p)>0){
            setMsg(obj,"error","当前对象已存在");
        }else{
            productorService.save(e);
        }
        return obj.toString();
    }

    /**
     * 编辑保存
     * @param e
     * @return
     */
    @RequestMapping("/update")
    public String update(Productor e)throws Exception{
        JSONObject obj=getMsg();
        if(productorService.findCount(e)>0){
            productorService.update(e);
        }else{
            setMsg(obj,"error","编辑失败");
        }
        return obj.toString();
    }


    /**
     * 单个删除
     * @param e
     * @return
     */
    @RequestMapping("/delete")
    public String delete(Productor e)throws Exception{
        JSONObject obj=getMsg();
        if(e.getPro_id()!=null) {
            productorService.delete(e);
        }else {
            setMsg(obj, "error", "删除失败");
        }
        return obj.toString();
    }

    /**
     * 批量删除
     * @param e
     * @return
     */
    @RequestMapping("/deletes")
    public String deletes(Productor e)throws Exception{
        JSONObject obj=getMsg();
        if(e.getData().size()>0){
            productorService.deleteBatch(e);
        }else{
            setMsg(obj,"error","删除失败");
        }
        return obj.toString();
    }


}
