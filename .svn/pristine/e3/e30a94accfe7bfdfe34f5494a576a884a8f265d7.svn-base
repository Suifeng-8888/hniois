package com.hniois.monitor.controller;

import com.alibaba.fastjson.JSON;
import com.hniois.common.page.Page;
import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Outfit;
import com.hniois.monitor.entity.Providers;
import com.hniois.monitor.entity.Recall;
import com.hniois.monitor.service.OutfitService;
import com.hniois.monitor.service.ProvidersManage;
import com.hniois.monitor.service.RecallService;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import java.util.List;

/**
 * Create By javaMan
 * 2018/10/15  14:39
 * 产品召回
 */
@Controller
@RequestMapping(value = "/recall")
public class RecallController extends BaseController {

    @Resource(name = "recallService")
    private RecallService recallService;  // 产品召回  service

    @Resource(name = "outfitService")
    private OutfitService outfitService;  // 监管机构 service

    @Resource(name = "providersService")
    private ProvidersManage providersManage;  // 生产基地 service

    private String list = "monitor/recall/recall_list";// 分页列表页面
    private String edit = "monitor/recall/recall_edit";// 新增修改页面
    private String cpdd = "monitor/recall/recall_cpdd";// 召回产品订单页面

    @RequestMapping(value = "/toPage")
    public ModelAndView toPage(Page page) {
        ModelAndView mv = getModelAndViewToPage(page);
        mv.setViewName(list);
        return mv;
    }

    @RequestMapping(value = "/list")
    @ResponseBody
    public String pageList(Recall recall) throws Exception {
        // 当前页
        int currPage = getThisPage(recall.getPage());
        // 每页显示条数
        int limit = getThisLimit(recall.getLimit());
        recall.setOffset((currPage-1) * limit);
        recall.setPageSize(limit);
        Page page = recallService.findPage(recall);
        return JSON.toJSONString(page);
    }

    @RequestMapping(value="/toEdit")
    public ModelAndView addORUpd(Recall e) throws Exception {
        ModelAndView mv = getModelAndView();
        Recall recall = new Recall();

        List<Outfit> outfits = outfitService.findList(new Outfit());
        mv.addObject("outfits", outfits); // 监管部门

        List<Providers> providers = providersManage.findList(new Providers());
        mv.addObject("providers", providers); // 供应商

        if (StringUtils.isNotEmpty(e.getId())) {
            recall = recallService.find(e);
        }
        recall.setCode(e.getCode());  // 判断：0查看 or 1 增加/修改
        mv.addObject("recall", recall); // 产品召回信息

        mv.setViewName(edit);
        return mv;
    }

    @RequestMapping(value = "/add")
    @ResponseBody
    public String add(Recall recall) throws Exception {
        JSONObject obj = getMsg();//返回信息
        recallService.save(recall);
        return obj.toString();
    }

    @RequestMapping(value = "/update")
    @ResponseBody
    public String update(Recall recall) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(StringUtils.isNotEmpty(recall.getId())) {
            recallService.update(recall);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

    @RequestMapping(value = "/delete")
    @ResponseBody
    public String delete(Recall recall) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(StringUtils.isNotEmpty(recall.getId())) {
            recallService.delete(recall);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

    @RequestMapping(value = "/deletes")
    @ResponseBody
    public String deletes(Recall recall) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(recall.getData() != null && recall.getData().size() > 0) {
            recallService.deleteBatch(recall);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

    /**
     * 选择召回产品订单
     * @return
     */
    @RequestMapping("/cpdd")
    public ModelAndView cpdd() {
        ModelAndView mv = getModelAndView();
        mv.setViewName(cpdd);
        return mv;
    }
}
