package com.hniois.monitor.controller;

import com.alibaba.fastjson.JSON;
import com.hniois.common.page.Page;
import com.hniois.controller.base.BaseController;
import com.hniois.monitor.entity.Complain;
import com.hniois.monitor.service.ComplainService;
import com.hniois.util.Const;
import com.hniois.util.DateUtil;
import com.hniois.util.ExportExcelUtil;
import com.hniois.util.SessionManager;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Create By javaMan
 * 2018/8/28  14:47
 * 投诉建议  Controller
 */
@Controller
@RequestMapping(value = "/complain")
public class ComplainController extends BaseController {

    @Resource(name = "complainService")
    private ComplainService complainService;

    private String list = "monitor/complain/complain_list";// 分页列表页面
    private String complain_edit = "monitor/complain/complain_edit";// 详情查看

    /**
     *  进入投诉建议分页列表
     * @param page
     * @return
     */
    @RequestMapping(value = "/toPage")
    public ModelAndView toPage(Page page) {
        ModelAndView mv = getModelAndViewToPage(page);
        mv.setViewName(list);
        return mv;
    }

    /**
     *  投诉建议分页列表
     * @param complain
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/list")
    @ResponseBody
    public String pageList(Complain complain) throws Exception {
        if(Const.PROVIDER_ADMIN.equals(SessionManager.getUserType())){
            complain.setFarm_id(SessionManager.getFarmID());
        }
        // 当前页
        int currPage = getThisPage(complain.getPage());
        // 每页显示条数
        int limit = getThisLimit(complain.getLimit());
        complain.setOffset((currPage-1) * limit);
        complain.setPageSize(limit);
        Page page = complainService.findPage(complain);
        return JSON.toJSONString(page);
    }

    /**
     * 查看
     * @param complain
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/toEdit")
    public ModelAndView look(Complain complain) throws Exception {
        ModelAndView mv =this.getModelAndView();
        Complain c=new Complain();
        if(StringUtils.isNotEmpty(complain.getId())){
            c= complainService.find(complain);
        }
        c.setCode(complain.getCode());
        mv.addObject("complain", c);
        mv.setViewName(complain_edit);
        return mv;
    }

    /**
     * 回复更新数据
     * @return
     */
    @RequestMapping(value = "/update")
    @ResponseBody
    public String update(Complain complain) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if (StringUtils.isNotEmpty(complain.getId())) {
            complainService.update(complain);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

    /**
     * 单个删除
     * @param complain
     * @return
     * @throws Exception
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public String delete(Complain complain) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if (StringUtils.isNotEmpty(complain.getId())) {
            complainService.delete(complain);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

    /**
     * 批量删除
     * @param complain
     * @return
     */
    @RequestMapping(value = "/deletes")
    @ResponseBody
    public String deletes(Complain complain) throws Exception {
        JSONObject obj = getMsg();//返回信息
        if(complain.getData() != null && complain.getData().size() > 0) {
            complainService.deleteBatch(complain);
        } else {
            setMsg(obj, "error", "参数不能为空...");
        }
        return obj.toString();
    }

    /**
     * 查询count
     * @param e 用户信息
     * @return json
     * */
    @RequestMapping(value="/findCount")
    @ResponseBody
    public Map<String, Object> findCount(Complain e) throws Exception {
        Complain com=new Complain();
        com.setStatus("投诉");
        Integer count = complainService.findCount(com);
        Complain com2=new Complain();
        com2.setStatus("建议");
        Integer count2 = complainService.findCount(com2);
        Map<String, Object> map = new HashMap<String, Object>();
        map.put("count", count);
        map.put("count2", count2);
        return map;
    }

    /**
     * 导出
     * @param e 信息
     * @return json
     * */
    @RequestMapping(value="/doExport")
    @ResponseBody
    public void doExport(Complain e) throws Exception {
        if(Const.PROVIDER_ADMIN.equals(SessionManager.getUserType())){
            e.setFarm_id(SessionManager.getFarmID());
        }
        //导出工具
        ExportExcelUtil<Complain> export = new ExportExcelUtil<Complain>();
        //文件名称
        String filename = "complainList" + DateUtil.getTimes();
        //导出数据信息
        List list = complainService.findPage(e).getData();
        //执行导出
        doExport(filename,list,export);
    }

}
